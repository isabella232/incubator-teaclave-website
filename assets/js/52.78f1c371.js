(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{586:function(e,t,r){"use strict";r.r(t);var s=r(29),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"recommended-os-to-start-with"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#recommended-os-to-start-with"}},[e._v("#")]),e._v(" Recommended OS to start with")]),e._v(" "),r("p",[e._v("We recommend Ubuntu 16.04/18.04. Desktop or server is the same. It could be your host OS or guest OS (inside docker). Technically, a full compatible list could be found at Intel's download "),r("a",{attrs:{href:"https://download.01.org/intel-sgx/linux-2.4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("page")]),e._v(". As of 04-01-2019 (v 2.4.0), the list contains:")]),e._v(" "),r("ul",[r("li",[e._v("CentOS 7.5")]),e._v(" "),r("li",[e._v("Fedora 27 server")]),e._v(" "),r("li",[e._v("RedHat Enterprise Linux 7.4")]),e._v(" "),r("li",[e._v("SUSE 12.3 server")]),e._v(" "),r("li",[e._v("Ubuntu 16.04")]),e._v(" "),r("li",[e._v("Ubuntu 18.04")])]),e._v(" "),r("h1",{attrs:{id:"hardware-setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hardware-setup"}},[e._v("#")]),e._v(" Hardware setup")]),e._v(" "),r("p",[e._v("A good reference for hardware compatibility is "),r("a",{attrs:{href:"https://github.com/ayeks/SGX-hardware",target:"_blank",rel:"noopener noreferrer"}},[e._v("SGX-Hardware")]),e._v(". You can use the script "),r("a",{attrs:{href:"https://github.com/ayeks/SGX-hardware/blob/master/test-sgx.c",target:"_blank",rel:"noopener noreferrer"}},[e._v("test-sgx.c")]),e._v(" there to check if SGX is/could be enabled.")]),e._v(" "),r("p",[e._v("Followings are FAQs I've been always asked:")]),e._v(" "),r("ol",[r("li",[e._v("Macbook Pro? No to all on hardware support! Docker-based simulation is OK.")]),e._v(" "),r("li",[e._v("Rack Server? Here are my listings:")])]),e._v(" "),r("ul",[r("li",[e._v("SuperServer "),r("a",{attrs:{href:"https://www.supermicro.com/products/system/1U/5019/SYS-5019S-MR.cfm",target:"_blank",rel:"noopener noreferrer"}},[e._v("5019S-MR")])]),e._v(" "),r("li",[e._v("Lenovo "),r("a",{attrs:{href:"https://www.lenovo.com/us/en/data-center/servers/racks/ThinkSystem-SR250/p/77XX7SRSR25",target:"_blank",rel:"noopener noreferrer"}},[e._v("SR250")])]),e._v(" "),r("li",[e._v("SuperMicro Microblade server with "),r("a",{attrs:{href:"https://www.supermicro.com/products/MicroBlade/module/MBI-6119G-T4.cfm",target:"_blank",rel:"noopener noreferrer"}},[e._v("MBI-6119G-T4")]),e._v(".")])]),e._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[e._v("Laptops? I don't know. If you can find something related to Intel SGX in the BIOS, then Yes.")])]),e._v(" "),r("p",[e._v("Another solution is Intel's "),r("a",{attrs:{href:"https://www.intel.com/content/dam/support/us/en/documents/server-products/server-accessories/VCA2_HW_User_Guide.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("VCA 2")]),e._v(" card. It should be placed only in 2-socket Xeon E5 systems (or following). Dmitrii of Intel Lab is using it for "),r("a",{attrs:{href:"https://redislabs.com/rlsessions_post_type/redis-sgx-secure-redis-intel-sgx/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis-SGX")]),e._v(".")]),e._v(" "),r("h1",{attrs:{id:"software-setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#software-setup"}},[e._v("#")]),e._v(" Software Setup")]),e._v(" "),r("h2",{attrs:{id:"rust-toolchain"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rust-toolchain"}},[e._v("#")]),e._v(" Rust toolchain")]),e._v(" "),r("p",[e._v("Please use "),r("a",{attrs:{href:"https://rustup.rs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("rustup")]),e._v(" to install and manage Rust toolchains. "),r("strong",[e._v("DO NOT")]),e._v(" use anything like "),r("code",[e._v("apt")]),e._v(" or "),r("code",[e._v("yum")]),e._v(".")]),e._v(" "),r("p",[e._v("During the installation you'll be asked about 'installation options' as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("Current installation options:\n\n   default host triple: x86_64-unknown-linux-gnu\n     default toolchain: stable\n  modify PATH variable: yes\n")])])]),r("p",[e._v("The host triple (though quadruple here) is correct. You could just press enter to skip it. When asking about default toolchain, you could enter "),r("code",[e._v("nightly-2019-01-28")]),e._v(" or similar version number. And we recommend to answer 'Y' to the PATH modification.")]),e._v(" "),r("p",[e._v("rustup is always installed in "),r("code",[e._v("~")]),e._v(" and does not affect other users.")]),e._v(" "),r("p",[e._v("Then you will have rustup works well. To switch to another toolchain, try")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ rustup toolchain default nightly-2019-03-31\n")])])]),r("p",[e._v("This would triggers downloading and installation if the desired toolchain is not found on your disk.")]),e._v(" "),r("p",[e._v("To add more rust tools such as "),r("code",[e._v("rust-src")]),e._v(" (for xargo), "),r("code",[e._v("rust-clippy")]),e._v(" (for lint):")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ rustup component add rust-src\n")])])]),r("h2",{attrs:{id:"intel-sgx-toolchain-setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#intel-sgx-toolchain-setup"}},[e._v("#")]),e._v(" Intel SGX toolchain setup")]),e._v(" "),r("p",[e._v("The toolchain setup strictly follows the following steps:")]),e._v(" "),r("ol",{attrs:{start:"0"}},[r("li",[e._v("Driver installation ( sgx_linux_x64_driver_??????.bin ). You'll get a misc device '/dev/isgx' after this step.")]),e._v(" "),r("li",[e._v("(OPTIONAL, if Intel ME is required) iCls setup (iclsClient-1.45.449.12-1.x86_64.rpm)")]),e._v(" "),r("li",[e._v("(OPTIONAL, if Intel ME is required) jhi setup https://github.com/01org/dynamic-application-loader-host-interface")]),e._v(" "),r("li",[e._v("Platform Software installation (libsgx-enclave-common, libsgx-enclave-common-dev, libsgx-enclave-common-dbgsym)")]),e._v(" "),r("li",[e._v("Intel SGX SDK installation ( sgx_linux_x64_sdk_???????.bin )")])]),e._v(" "),r("p",[e._v("And don't forget to source the "),r("code",[e._v("environment")]),e._v(" file for Intel SGX SDK (such as sgx-sign).")]),e._v(" "),r("h2",{attrs:{id:"docker-setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-setup"}},[e._v("#")]),e._v(" Docker setup")]),e._v(" "),r("h3",{attrs:{id:"use-docker-with-hardware-support-and-run-aesm-inside-docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#use-docker-with-hardware-support-and-run-aesm-inside-docker"}},[e._v("#")]),e._v(" Use docker with hardware support, and run aesm inside docker")]),e._v(" "),r("p",[e._v("Firstly, do step 0 to get "),r("code",[e._v("/dev/isgx")]),e._v(" works. Then start a docker container as follows:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker run -ti --rm -v /path/to/sdk:/root/sgx \\\n             --device /dev/isgx \\\n             --device /dev/mei0 \\  # Optional if you have it and want to use it\n             baiduxlab/sgx-rust\nroot@913e6a00c8d8:~#\n")])])]),r("p",[e._v("(Optional) Install iCls and jhi daemon. Steps are "),r("a",{attrs:{href:"https://github.com/apache/incubator-teaclave-sgx-sdk/blob/master/dockerfile/Dockerfile.1604.nightly#L50",target:"_blank",rel:"noopener noreferrer"}},[e._v("here")])]),e._v(" "),r("p",[e._v("(Optional) Start jhi daemon: "),r("code",[e._v("jhid -d")])]),e._v(" "),r("p",[e._v("Start aesm daemon")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("root@913e6a00c8d8:~# aesm_service[18]: The server sock is 0x5636e90be960\naesm_service[18]: [ADMIN]White List update requested\naesm_service[18]: [ADMIN]Platform Services initializing\naesm_service[18]: [ADMIN]Platform Services initialization failed due to DAL error\naesm_service[18]: [ADMIN]White list update request successful for Version: 49\n\nroot@913e6a00c8d8:~#\n")])])]),r("p",[e._v("And then change directory to "),r("code",[e._v("/root/sgx/samplecode/hello-rust")]),e._v(" and "),r("code",[e._v("make")]),e._v(". Then cd to "),r("code",[e._v("bin")]),e._v(" and "),r("code",[e._v("./app")]),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"use-docker-without-hardware-support-only-with-simulation-windows-macbook-compatible"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#use-docker-without-hardware-support-only-with-simulation-windows-macbook-compatible"}},[e._v("#")]),e._v(" Use docker without hardware support, only with simulation. Windows/Macbook compatible.")]),e._v(" "),r("p",[e._v("Make sure you have docker installed and working.")]),e._v(" "),r("p",[e._v("Start docker as:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker run -ti --rm -v /path/to/sdk:/root/sgx baiduxlab/sgx-rust\nroot@913e6a00c8d8:~#\n")])])]),r("p",[e._v("And then build in simulation mode")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ cd /root/sgx/samplecode/hello-rust\n$ SGX_MODE=SW make\n$ cd bin\n$ ./app\n")])])]),r("h3",{attrs:{id:"use-docker-with-hardware-support-and-run-aesm-outside-docker-on-the-host-os"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#use-docker-with-hardware-support-and-run-aesm-outside-docker-on-the-host-os"}},[e._v("#")]),e._v(" Use docker with hardware support, and run aesm outside docker (on the host OS)")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://github.com/apache/incubator-teaclave-sgx-sdk/raw/master/documents/mesa.png",alt:"overview"}})]),e._v(" "),r("p",[e._v("Just add another device mapping to the command to have "),r("code",[e._v("aesm.socket")]),e._v(" works in SGX. This requires step 3 finished on the host OS and "),r("code",[e._v("/var/run/aesmd/aesm.socket")]),e._v(" exists on the host OS.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker run --rm -ti \\\n             --device /dev/isgx \\                               # forward isgx device\n             -v /path/to/rust-sgx-sdk:/root/sgx \\               # add SDK\n             -v /var/run/aesmd:/var/run/aesmd \\                 # forward domain socket\n             baiduxlab/sgx-rust\n")])])]),r("p",[e._v("Then you can skip launching "),r("code",[e._v("aesmd")]),e._v(" in the docker container.")]),e._v(" "),r("h1",{attrs:{id:"ci-setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ci-setup"}},[e._v("#")]),e._v(" CI setup")]),e._v(" "),r("p",[e._v("The only known solution:"),r("a",{attrs:{href:"http://drone.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("drone.io")]),e._v(" is provided by @elichai. We've set it up successfully.")])])}),[],!1,null,null,null);t.default=a.exports}}]);