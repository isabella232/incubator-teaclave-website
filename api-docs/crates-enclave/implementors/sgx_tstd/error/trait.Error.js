(function() {var implementors = {};
implementors["aho_corasick"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["base64"] = [{"text":"impl Error for DecodeError","synthetic":false,"types":[]}];
implementors["chrono"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]}];
implementors["getrandom"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["gif"] = [{"text":"impl Error for DecodingError","synthetic":false,"types":[]}];
implementors["hex"] = [{"text":"impl Error for FromHexError","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl Error for InvalidHeaderName","synthetic":false,"types":[]},{"text":"impl Error for InvalidHeaderValue","synthetic":false,"types":[]},{"text":"impl Error for ToStrError","synthetic":false,"types":[]},{"text":"impl Error for InvalidMethod","synthetic":false,"types":[]},{"text":"impl Error for InvalidStatusCode","synthetic":false,"types":[]},{"text":"impl Error for InvalidUri","synthetic":false,"types":[]},{"text":"impl Error for InvalidUriParts","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["humantime"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["image"] = [{"text":"impl Error for ImageError","synthetic":false,"types":[]}];
implementors["jpeg_decoder"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["jsonwebtoken"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Error for SetLoggerError","synthetic":false,"types":[]},{"text":"impl Error for ParseLevelError","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Error for ParseBigIntError","synthetic":false,"types":[]}];
implementors["num_complex"] = [{"text":"impl&lt;E:&nbsp;Error&gt; Error for ParseComplexError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl Error for ParseRatioError","synthetic":false,"types":[]}];
implementors["pem"] = [{"text":"impl Error for PemError","synthetic":false,"types":[]}];
implementors["png"] = [{"text":"impl Error for DecodingError","synthetic":false,"types":[]},{"text":"impl Error for EncodingError","synthetic":false,"types":[]}];
implementors["prost"] = [{"text":"impl Error for DecodeError","synthetic":false,"types":[]},{"text":"impl Error for EncodeError","synthetic":false,"types":[]}];
implementors["rand"] = [{"text":"impl Error for BernoulliError","synthetic":false,"types":[]},{"text":"impl Error for WeightedError","synthetic":false,"types":[]},{"text":"impl Error for ReadError","synthetic":false,"types":[]}];
implementors["rand_core"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for CaseFoldError","synthetic":false,"types":[]},{"text":"impl Error for UnicodeWordError","synthetic":false,"types":[]}];
implementors["ring"] = [{"text":"impl Error for Unspecified","synthetic":false,"types":[]},{"text":"impl Error for KeyRejected","synthetic":false,"types":[]}];
implementors["rulinalg"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["rustls"] = [{"text":"impl Error for TLSError","synthetic":false,"types":[]}];
implementors["rusty_leveldb"] = [{"text":"impl Error for Status","synthetic":false,"types":[]}];
implementors["rusty_machine"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["sgx_tstd"] = [];
implementors["simple_asn1"] = [{"text":"impl Error for ASN1EncodeErr","synthetic":false,"types":[]}];
implementors["snap"] = [{"text":"impl&lt;W:&nbsp;Any&gt; Error for IntoInnerError&lt;W&gt;","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["teaclave_attestation"] = [{"text":"impl Error for AttestationError","synthetic":false,"types":[]}];
implementors["teaclave_types"] = [{"text":"impl Error for TeeServiceError","synthetic":false,"types":[]},{"text":"impl Error for TeaclaveServiceResponseError","synthetic":false,"types":[]}];
implementors["termcolor"] = [{"text":"impl Error for ParseColorError","synthetic":false,"types":[]}];
implementors["tiff"] = [{"text":"impl Error for TiffError","synthetic":false,"types":[]}];
implementors["toml"] = [{"text":"impl Error for DatetimeParseError","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["url"] = [{"text":"impl Error for ParseError","synthetic":false,"types":[]}];
implementors["uuid"] = [{"text":"impl Error for Error","synthetic":false,"types":[]}];
implementors["webpki"] = [{"text":"impl Error for Error","synthetic":false,"types":[]},{"text":"impl Error for InvalidDNSNameError","synthetic":false,"types":[]}];
implementors["yasna"] = [{"text":"impl Error for ParseOidError","synthetic":false,"types":[]},{"text":"impl Error for ASN1Error","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()