(function() {var implementors = {};
implementors["hashbrown_tstd"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.DefaultHashBuilder.html\" title=\"enum hashbrown_tstd::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>","synthetic":true,"types":["hashbrown_tstd::map::DefaultHashBuilder"]},{"text":"impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.HashMap.html\" title=\"struct hashbrown_tstd::hash_map::HashMap\">HashMap</a>&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::HashMap"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Iter.html\" title=\"struct hashbrown_tstd::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Iter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.IterMut.html\" title=\"struct hashbrown_tstd::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::IterMut"]},{"text":"impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.IntoIter.html\" title=\"struct hashbrown_tstd::hash_map::IntoIter\">IntoIter</a>&lt;K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::IntoIter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Keys.html\" title=\"struct hashbrown_tstd::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Keys"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Values.html\" title=\"struct hashbrown_tstd::hash_map::Values\">Values</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Values"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.Drain.html\" title=\"struct hashbrown_tstd::hash_map::Drain\">Drain</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::Drain"]},{"text":"impl&lt;'a, K, V, F&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.DrainFilter.html\" title=\"struct hashbrown_tstd::hash_map::DrainFilter\">DrainFilter</a>&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::DrainFilter"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown_tstd::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;","synthetic":true,"types":["hashbrown_tstd::map::ValuesMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown_tstd::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryBuilderMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown_tstd::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown_tstd::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawOccupiedEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown_tstd::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawVacantEntryMut"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown_tstd::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S&gt;","synthetic":true,"types":["hashbrown_tstd::map::RawEntryBuilder"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.Entry.html\" title=\"enum hashbrown_tstd::hash_map::Entry\">Entry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::Entry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown_tstd::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::OccupiedEntry"]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown_tstd::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::map::VacantEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"hashbrown_tstd/hash_map/enum.RustcEntry.html\" title=\"enum hashbrown_tstd::hash_map::RustcEntry\">RustcEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RustcOccupiedEntry.html\" title=\"struct hashbrown_tstd::hash_map::RustcOccupiedEntry\">RustcOccupiedEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcOccupiedEntry"]},{"text":"impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_map/struct.RustcVacantEntry.html\" title=\"struct hashbrown_tstd::hash_map::RustcVacantEntry\">RustcVacantEntry</a>&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::rustc_entry::RustcVacantEntry"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.HashSet.html\" title=\"struct hashbrown_tstd::hash_set::HashSet\">HashSet</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::set::HashSet"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Iter.html\" title=\"struct hashbrown_tstd::hash_set::Iter\">Iter</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown_tstd::set::Iter"]},{"text":"impl&lt;K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.IntoIter.html\" title=\"struct hashbrown_tstd::hash_set::IntoIter\">IntoIter</a>&lt;K&gt;","synthetic":true,"types":["hashbrown_tstd::set::IntoIter"]},{"text":"impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Drain.html\" title=\"struct hashbrown_tstd::hash_set::Drain\">Drain</a>&lt;'a, K&gt;","synthetic":true,"types":["hashbrown_tstd::set::Drain"]},{"text":"impl&lt;'a, K, F&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.DrainFilter.html\" title=\"struct hashbrown_tstd::hash_set::DrainFilter\">DrainFilter</a>&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["hashbrown_tstd::set::DrainFilter"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Intersection.html\" title=\"struct hashbrown_tstd::hash_set::Intersection\">Intersection</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Intersection"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Difference.html\" title=\"struct hashbrown_tstd::hash_set::Difference\">Difference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Difference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown_tstd::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::SymmetricDifference"]},{"text":"impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"hashbrown_tstd/hash_set/struct.Union.html\" title=\"struct hashbrown_tstd::hash_set::Union\">Union</a>&lt;'a, T, S&gt;","synthetic":true,"types":["hashbrown_tstd::set::Union"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hashbrown_tstd/enum.TryReserveError.html\" title=\"enum hashbrown_tstd::TryReserveError\">TryReserveError</a>","synthetic":true,"types":["hashbrown_tstd::TryReserveError"]}];
implementors["sgx_alloc"] = [{"text":"impl Freeze for System","synthetic":true,"types":[]},{"text":"impl Freeze for AlignReq","synthetic":true,"types":[]},{"text":"impl Freeze for AlignAlloc","synthetic":true,"types":[]},{"text":"impl Freeze for AlighAllocErr","synthetic":true,"types":[]},{"text":"impl Freeze for AlignLayoutErr","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AlignBox&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RsrvMemAlloc","synthetic":true,"types":[]},{"text":"impl Freeze for RsrvMemAllocErr","synthetic":true,"types":[]},{"text":"impl Freeze for ProtectAttr","synthetic":true,"types":[]}];
implementors["sgx_backtrace_sys"] = [{"text":"impl Freeze for backtrace_state","synthetic":true,"types":[]}];
implementors["sgx_demangle"] = [{text:"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"sgx_demangle/struct.Demangle.html\" title=\"struct sgx_demangle::Demangle\">Demangle</a>&lt;'a&gt;",synthetic:true,types:["sgx_demangle::Demangle"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_demangle/struct.TryDemangleError.html\" title=\"struct sgx_demangle::TryDemangleError\">TryDemangleError</a>",synthetic:true,types:["sgx_demangle::TryDemangleError"]},];
implementors["sgx_libc"] = [{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl Freeze for stat64","synthetic":true,"types":[]},{"text":"impl Freeze for timeval","synthetic":true,"types":[]},{"text":"impl Freeze for timespec","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Freeze for addrinfo","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Freeze for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Freeze for fd_set","synthetic":true,"types":[]},{"text":"impl Freeze for tm","synthetic":true,"types":[]},{"text":"impl Freeze for epoll_event","synthetic":true,"types":[]},{"text":"impl Freeze for in_addr","synthetic":true,"types":[]},{"text":"impl Freeze for in6_addr","synthetic":true,"types":[]},{"text":"impl Freeze for ip_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl Freeze for hostent","synthetic":true,"types":[]},{"text":"impl Freeze for iovec","synthetic":true,"types":[]},{"text":"impl Freeze for pollfd","synthetic":true,"types":[]},{"text":"impl Freeze for winsize","synthetic":true,"types":[]},{"text":"impl Freeze for linger","synthetic":true,"types":[]},{"text":"impl Freeze for sigval","synthetic":true,"types":[]},{"text":"impl Freeze for msghdr","synthetic":true,"types":[]},{"text":"impl Freeze for cmsghdr","synthetic":true,"types":[]},{"text":"impl Freeze for dirent","synthetic":true,"types":[]},{"text":"impl Freeze for dirent64","synthetic":true,"types":[]},{"text":"impl Freeze for passwd","synthetic":true,"types":[]},{"text":"impl Freeze for cpu_set_t","synthetic":true,"types":[]},{"text":"impl Freeze for ucred","synthetic":true,"types":[]},{"text":"impl Freeze for pthread_once_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigset_t","synthetic":true,"types":[]},{"text":"impl Freeze for sigaction","synthetic":true,"types":[]},{"text":"impl Freeze for siginfo_t","synthetic":true,"types":[]},{"text":"impl Freeze for DIR","synthetic":true,"types":[]}];
implementors["sgx_tprotected_fs"] = [{"text":"impl Freeze for SgxFileStream","synthetic":true,"types":[]},{"text":"impl Freeze for SeekFrom","synthetic":true,"types":[]}];
implementors["sgx_trts"] = [{"text":"impl Freeze for CString","synthetic":true,"types":[]},{"text":"impl Freeze for CStr","synthetic":true,"types":[]},{"text":"impl Freeze for NulError","synthetic":true,"types":[]},{"text":"impl Freeze for FromBytesWithNulError","synthetic":true,"types":[]},{"text":"impl Freeze for IntoStringError","synthetic":true,"types":[]},{"text":"impl Freeze for Feature","synthetic":true,"types":[]},{"text":"impl Freeze for global_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for thread_data_t","synthetic":true,"types":[]},{"text":"impl Freeze for SgxGlobalData","synthetic":true,"types":[]},{"text":"impl Freeze for SgxThreadData","synthetic":true,"types":[]},{"text":"impl Freeze for SgxThreadPolicy","synthetic":true,"types":[]}];
implementors["sgx_tstd"] = [{"text":"impl&lt;T&gt; Freeze for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AccessError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Key&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ThreadId","synthetic":true,"types":[]},{"text":"impl Freeze for SgxThread","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Freeze for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Freeze for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Iter&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for IterMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoIter&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Keys&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Values&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Drain&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Freeze for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for ValuesMut&lt;'a, K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoKeys&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Freeze for IntoValues&lt;K, V&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryBuilderMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawOccupiedEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawVacantEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryBuilder&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for RandomState","synthetic":true,"types":[]},{"text":"impl Freeze for DefaultHasher","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Freeze for RawEntryMut&lt;'a, K, V, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Freeze for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Freeze for Iter&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Freeze for IntoIter&lt;K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Freeze for Drain&lt;'a, K&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Freeze for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Intersection&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Difference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for SymmetricDifference&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Freeze for Union&lt;'a, T, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Vars","synthetic":true,"types":[]},{"text":"impl Freeze for VarsOs","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SplitPaths&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for JoinPathsError","synthetic":true,"types":[]},{"text":"impl Freeze for VarError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Chain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ErrorIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for OsString","synthetic":true,"types":[]},{"text":"impl Freeze for OsStr","synthetic":true,"types":[]},{"text":"impl Freeze for SgxFile","synthetic":true,"types":[]},{"text":"impl Freeze for OpenOptions","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for IntoInnerError&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Freeze for LineWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Error","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Lazy&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Stderr","synthetic":true,"types":[]},{"text":"impl Freeze for Stdin","synthetic":true,"types":[]},{"text":"impl Freeze for Stdout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StderrLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StdinLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StdoutLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Empty","synthetic":true,"types":[]},{"text":"impl Freeze for Repeat","synthetic":true,"types":[]},{"text":"impl Freeze for Sink","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IoSliceMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for IoSlice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Initializer","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Freeze for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Freeze for Bytes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Split&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Freeze for Lines&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for ErrorKind","synthetic":true,"types":[]},{"text":"impl Freeze for SeekFrom","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddrV4","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddrV6","synthetic":true,"types":[]},{"text":"impl Freeze for AddrParseError","synthetic":true,"types":[]},{"text":"impl Freeze for IpAddr","synthetic":true,"types":[]},{"text":"impl Freeze for Ipv6MulticastScope","synthetic":true,"types":[]},{"text":"impl Freeze for SocketAddr","synthetic":true,"types":[]},{"text":"impl Freeze for Shutdown","synthetic":true,"types":[]},{"text":"impl Freeze for stat","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for AssertUnwindSafe&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PrefixComponent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Components&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Ancestors&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PathBuf","synthetic":true,"types":[]},{"text":"impl Freeze for Path","synthetic":true,"types":[]},{"text":"impl Freeze for StripPrefixError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Prefix&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Component&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for Barrier","synthetic":true,"types":[]},{"text":"impl Freeze for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl !Freeze for SgxCondvar","synthetic":true,"types":[]},{"text":"impl !Freeze for SgxThreadCondvar","synthetic":true,"types":[]},{"text":"impl Freeze for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for SgxMutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for SgxMutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for SgxThreadMutex","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for SgxReentrantMutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for SgxReentrantMutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for SgxReentrantThreadMutex","synthetic":true,"types":[]},{"text":"impl !Freeze for Once","synthetic":true,"types":[]},{"text":"impl Freeze for OnceState","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for SgxRwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for SgxRwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for SgxRwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for SgxThreadRwLock","synthetic":true,"types":[]},{"text":"impl !Freeze for SgxSpinlock","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SgxSpinlockGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for SgxThreadSpinlock","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for PoisonError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for TryLockError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Instant","synthetic":true,"types":[]},{"text":"impl Freeze for SystemTime","synthetic":true,"types":[]},{"text":"impl Freeze for SystemTimeError","synthetic":true,"types":[]},{"text":"impl Freeze for File","synthetic":true,"types":[]},{"text":"impl Freeze for Metadata","synthetic":true,"types":[]},{"text":"impl Freeze for ReadDir","synthetic":true,"types":[]},{"text":"impl Freeze for DirEntry","synthetic":true,"types":[]},{"text":"impl Freeze for OpenOptions","synthetic":true,"types":[]},{"text":"impl Freeze for Permissions","synthetic":true,"types":[]},{"text":"impl Freeze for FileType","synthetic":true,"types":[]},{"text":"impl Freeze for DirBuilder","synthetic":true,"types":[]}];
implementors["sgx_types"] = [{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_attributes_t.html\" title=\"struct sgx_types::sgx_attributes_t\">sgx_attributes_t</a>",synthetic:true,types:["sgx_types::types::sgx_attributes_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_misc_attribute_t.html\" title=\"struct sgx_types::sgx_misc_attribute_t\">sgx_misc_attribute_t</a>",synthetic:true,types:["sgx_types::types::sgx_misc_attribute_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg1_t.html\" title=\"struct sgx_types::sgx_dh_msg1_t\">sgx_dh_msg1_t</a>",synthetic:true,types:["sgx_types::types::sgx_dh_msg1_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg2_t.html\" title=\"struct sgx_types::sgx_dh_msg2_t\">sgx_dh_msg2_t</a>",synthetic:true,types:["sgx_types::types::sgx_dh_msg2_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg3_body_t.html\" title=\"struct sgx_types::sgx_dh_msg3_body_t\">sgx_dh_msg3_body_t</a>",synthetic:true,types:["sgx_types::types::sgx_dh_msg3_body_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_msg3_t.html\" title=\"struct sgx_types::sgx_dh_msg3_t\">sgx_dh_msg3_t</a>",synthetic:true,types:["sgx_types::types::sgx_dh_msg3_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_session_enclave_identity_t.html\" title=\"struct sgx_types::sgx_dh_session_enclave_identity_t\">sgx_dh_session_enclave_identity_t</a>",synthetic:true,types:["sgx_types::types::sgx_dh_session_enclave_identity_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_dh_session_t.html\" title=\"struct sgx_types::sgx_dh_session_t\">sgx_dh_session_t</a>",synthetic:true,types:["sgx_types::types::sgx_dh_session_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ecc_param_t.html\" title=\"struct sgx_types::sgx_ecc_param_t\">sgx_ecc_param_t</a>",synthetic:true,types:["sgx_types::types::sgx_ecc_param_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_cpu_svn_t.html\" title=\"struct sgx_types::sgx_cpu_svn_t\">sgx_cpu_svn_t</a>",synthetic:true,types:["sgx_types::types::sgx_cpu_svn_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_key_id_t.html\" title=\"struct sgx_types::sgx_key_id_t\">sgx_key_id_t</a>",synthetic:true,types:["sgx_types::types::sgx_key_id_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_key_request_t.html\" title=\"struct sgx_types::sgx_key_request_t\">sgx_key_request_t</a>",synthetic:true,types:["sgx_types::types::sgx_key_request_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ra_msg1_t.html\" title=\"struct sgx_types::sgx_ra_msg1_t\">sgx_ra_msg1_t</a>",synthetic:true,types:["sgx_types::types::sgx_ra_msg1_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ra_msg2_t.html\" title=\"struct sgx_types::sgx_ra_msg2_t\">sgx_ra_msg2_t</a>",synthetic:true,types:["sgx_types::types::sgx_ra_msg2_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ps_sec_prop_desc_t.html\" title=\"struct sgx_types::sgx_ps_sec_prop_desc_t\">sgx_ps_sec_prop_desc_t</a>",synthetic:true,types:["sgx_types::types::sgx_ps_sec_prop_desc_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ra_msg3_t.html\" title=\"struct sgx_types::sgx_ra_msg3_t\">sgx_ra_msg3_t</a>",synthetic:true,types:["sgx_types::types::sgx_ra_msg3_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_spid_t.html\" title=\"struct sgx_types::sgx_spid_t\">sgx_spid_t</a>",synthetic:true,types:["sgx_types::types::sgx_spid_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_basename_t.html\" title=\"struct sgx_types::sgx_basename_t\">sgx_basename_t</a>",synthetic:true,types:["sgx_types::types::sgx_basename_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote_nonce_t.html\" title=\"struct sgx_types::sgx_quote_nonce_t\">sgx_quote_nonce_t</a>",synthetic:true,types:["sgx_types::types::sgx_quote_nonce_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_update_info_bit_t.html\" title=\"struct sgx_types::sgx_update_info_bit_t\">sgx_update_info_bit_t</a>",synthetic:true,types:["sgx_types::types::sgx_update_info_bit_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote_t.html\" title=\"struct sgx_types::sgx_quote_t\">sgx_quote_t</a>",synthetic:true,types:["sgx_types::types::sgx_quote_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_platform_info_t.html\" title=\"struct sgx_types::sgx_platform_info_t\">sgx_platform_info_t</a>",synthetic:true,types:["sgx_types::types::sgx_platform_info_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_att_key_id_t.html\" title=\"struct sgx_types::sgx_att_key_id_t\">sgx_att_key_id_t</a>",synthetic:true,types:["sgx_types::types::sgx_att_key_id_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_att_key_id_t.html\" title=\"struct sgx_types::sgx_ql_att_key_id_t\">sgx_ql_att_key_id_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_att_key_id_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_att_key_id_ext_t.html\" title=\"struct sgx_types::sgx_att_key_id_ext_t\">sgx_att_key_id_ext_t</a>",synthetic:true,types:["sgx_types::types::sgx_att_key_id_ext_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_qe_report_info_t.html\" title=\"struct sgx_types::sgx_qe_report_info_t\">sgx_qe_report_info_t</a>",synthetic:true,types:["sgx_types::types::sgx_qe_report_info_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_measurement_t.html\" title=\"struct sgx_types::sgx_measurement_t\">sgx_measurement_t</a>",synthetic:true,types:["sgx_types::types::sgx_measurement_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_report_data_t.html\" title=\"struct sgx_types::sgx_report_data_t\">sgx_report_data_t</a>",synthetic:true,types:["sgx_types::types::sgx_report_data_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_target_info_t.html\" title=\"struct sgx_types::sgx_target_info_t\">sgx_target_info_t</a>",synthetic:true,types:["sgx_types::types::sgx_target_info_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_report_body_t.html\" title=\"struct sgx_types::sgx_report_body_t\">sgx_report_body_t</a>",synthetic:true,types:["sgx_types::types::sgx_report_body_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_report_t.html\" title=\"struct sgx_types::sgx_report_t\">sgx_report_t</a>",synthetic:true,types:["sgx_types::types::sgx_report_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_dh_shared_t.html\" title=\"struct sgx_types::sgx_ec256_dh_shared_t\">sgx_ec256_dh_shared_t</a>",synthetic:true,types:["sgx_types::types::sgx_ec256_dh_shared_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_private_t.html\" title=\"struct sgx_types::sgx_ec256_private_t\">sgx_ec256_private_t</a>",synthetic:true,types:["sgx_types::types::sgx_ec256_private_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_public_t.html\" title=\"struct sgx_types::sgx_ec256_public_t\">sgx_ec256_public_t</a>",synthetic:true,types:["sgx_types::types::sgx_ec256_public_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ec256_signature_t.html\" title=\"struct sgx_types::sgx_ec256_signature_t\">sgx_ec256_signature_t</a>",synthetic:true,types:["sgx_types::types::sgx_ec256_signature_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_rsa3072_public_key_t.html\" title=\"struct sgx_types::sgx_rsa3072_public_key_t\">sgx_rsa3072_public_key_t</a>",synthetic:true,types:["sgx_types::types::sgx_rsa3072_public_key_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_rsa3072_key_t.html\" title=\"struct sgx_types::sgx_rsa3072_key_t\">sgx_rsa3072_key_t</a>",synthetic:true,types:["sgx_types::types::sgx_rsa3072_key_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_rsa3072_signature_t.html\" title=\"struct sgx_types::sgx_rsa3072_signature_t\">sgx_rsa3072_signature_t</a>",synthetic:true,types:["sgx_types::types::sgx_rsa3072_signature_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.rsa_params_t.html\" title=\"struct sgx_types::rsa_params_t\">rsa_params_t</a>",synthetic:true,types:["sgx_types::types::rsa_params_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_queue_t.html\" title=\"struct sgx_types::sgx_thread_queue_t\">sgx_thread_queue_t</a>",synthetic:true,types:["sgx_types::types::sgx_thread_queue_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_mutex_t.html\" title=\"struct sgx_types::sgx_thread_mutex_t\">sgx_thread_mutex_t</a>",synthetic:true,types:["sgx_types::types::sgx_thread_mutex_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_rwlock_t.html\" title=\"struct sgx_types::sgx_thread_rwlock_t\">sgx_thread_rwlock_t</a>",synthetic:true,types:["sgx_types::types::sgx_thread_rwlock_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_mutex_attr_t.html\" title=\"struct sgx_types::sgx_thread_mutex_attr_t\">sgx_thread_mutex_attr_t</a>",synthetic:true,types:["sgx_types::types::sgx_thread_mutex_attr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_rwlockattr_t.html\" title=\"struct sgx_types::sgx_thread_rwlockattr_t\">sgx_thread_rwlockattr_t</a>",synthetic:true,types:["sgx_types::types::sgx_thread_rwlockattr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_cond_attr_t.html\" title=\"struct sgx_types::sgx_thread_cond_attr_t\">sgx_thread_cond_attr_t</a>",synthetic:true,types:["sgx_types::types::sgx_thread_cond_attr_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_thread_cond_t.html\" title=\"struct sgx_types::sgx_thread_cond_t\">sgx_thread_cond_t</a>",synthetic:true,types:["sgx_types::types::sgx_thread_cond_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_cpu_context_t.html\" title=\"struct sgx_types::sgx_cpu_context_t\">sgx_cpu_context_t</a>",synthetic:true,types:["sgx_types::types::sgx_cpu_context_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_exception_info_t.html\" title=\"struct sgx_types::sgx_exception_info_t\">sgx_exception_info_t</a>",synthetic:true,types:["sgx_types::types::sgx_exception_info_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_aes_gcm_data_t.html\" title=\"struct sgx_types::sgx_aes_gcm_data_t\">sgx_aes_gcm_data_t</a>",synthetic:true,types:["sgx_types::types::sgx_aes_gcm_data_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_sealed_data_t.html\" title=\"struct sgx_types::sgx_sealed_data_t\">sgx_sealed_data_t</a>",synthetic:true,types:["sgx_types::types::sgx_sealed_data_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ps_cap_t.html\" title=\"struct sgx_types::sgx_ps_cap_t\">sgx_ps_cap_t</a>",synthetic:true,types:["sgx_types::types::sgx_ps_cap_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_kss_config_t.html\" title=\"struct sgx_types::sgx_kss_config_t\">sgx_kss_config_t</a>",synthetic:true,types:["sgx_types::types::sgx_kss_config_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_uswitchless_worker_stats_t.html\" title=\"struct sgx_types::sgx_uswitchless_worker_stats_t\">sgx_uswitchless_worker_stats_t</a>",synthetic:true,types:["sgx_types::types::sgx_uswitchless_worker_stats_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_uswitchless_config_t.html\" title=\"struct sgx_types::sgx_uswitchless_config_t\">sgx_uswitchless_config_t</a>",synthetic:true,types:["sgx_types::types::sgx_uswitchless_config_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_pce_info_t.html\" title=\"struct sgx_types::sgx_pce_info_t\">sgx_pce_info_t</a>",synthetic:true,types:["sgx_types::types::sgx_pce_info_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qe3_id_t.html\" title=\"struct sgx_types::sgx_ql_qe3_id_t\">sgx_ql_qe3_id_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_qe3_id_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_pck_cert_id_t.html\" title=\"struct sgx_types::sgx_ql_pck_cert_id_t\">sgx_ql_pck_cert_id_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_pck_cert_id_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_config_t.html\" title=\"struct sgx_types::sgx_ql_config_t\">sgx_ql_config_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_config_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qve_collateral_t.html\" title=\"struct sgx_types::sgx_ql_qve_collateral_t\">sgx_ql_qve_collateral_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_qve_collateral_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_ppid_rsa3072_encrypted_cert_info_t.html\" title=\"struct sgx_types::sgx_ql_ppid_rsa3072_encrypted_cert_info_t\">sgx_ql_ppid_rsa3072_encrypted_cert_info_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_ppid_rsa3072_encrypted_cert_info_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_auth_data_t.html\" title=\"struct sgx_types::sgx_ql_auth_data_t\">sgx_ql_auth_data_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_auth_data_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_certification_data_t.html\" title=\"struct sgx_types::sgx_ql_certification_data_t\">sgx_ql_certification_data_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_certification_data_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_ecdsa_sig_data_t.html\" title=\"struct sgx_types::sgx_ql_ecdsa_sig_data_t\">sgx_ql_ecdsa_sig_data_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_ecdsa_sig_data_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote_header_t.html\" title=\"struct sgx_types::sgx_quote_header_t\">sgx_quote_header_t</a>",synthetic:true,types:["sgx_types::types::sgx_quote_header_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_quote3_t.html\" title=\"struct sgx_types::sgx_quote3_t\">sgx_quote3_t</a>",synthetic:true,types:["sgx_types::types::sgx_quote3_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qe_report_info_t.html\" title=\"struct sgx_types::sgx_ql_qe_report_info_t\">sgx_ql_qe_report_info_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_qe_report_info_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_ql_qv_supplemental_t.html\" title=\"struct sgx_types::sgx_ql_qv_supplemental_t\">sgx_ql_qv_supplemental_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_qv_supplemental_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.align_req_t.html\" title=\"struct sgx_types::align_req_t\">align_req_t</a>",synthetic:true,types:["sgx_types::types::align_req_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_key_128bit_t.html\" title=\"struct sgx_types::sgx_align_key_128bit_t\">sgx_align_key_128bit_t</a>",synthetic:true,types:["sgx_types::types::sgx_align_key_128bit_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_mac_128bit_t.html\" title=\"struct sgx_types::sgx_align_mac_128bit_t\">sgx_align_mac_128bit_t</a>",synthetic:true,types:["sgx_types::types::sgx_align_mac_128bit_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_key_256bit_t.html\" title=\"struct sgx_types::sgx_align_key_256bit_t\">sgx_align_key_256bit_t</a>",synthetic:true,types:["sgx_types::types::sgx_align_key_256bit_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_mac_256bit_t.html\" title=\"struct sgx_types::sgx_align_mac_256bit_t\">sgx_align_mac_256bit_t</a>",synthetic:true,types:["sgx_types::types::sgx_align_mac_256bit_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_ec256_dh_shared_t.html\" title=\"struct sgx_types::sgx_align_ec256_dh_shared_t\">sgx_align_ec256_dh_shared_t</a>",synthetic:true,types:["sgx_types::types::sgx_align_ec256_dh_shared_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/struct.sgx_align_ec256_private_t.html\" title=\"struct sgx_types::sgx_align_ec256_private_t\">sgx_align_ec256_private_t</a>",synthetic:true,types:["sgx_types::types::sgx_align_ec256_private_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_dh_session_role_t.html\" title=\"enum sgx_types::sgx_dh_session_role_t\">sgx_dh_session_role_t</a>",synthetic:true,types:["sgx_types::types::sgx_dh_session_role_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ra_key_type_t.html\" title=\"enum sgx_types::sgx_ra_key_type_t\">sgx_ra_key_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_ra_key_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_quote_sign_type_t.html\" title=\"enum sgx_types::sgx_quote_sign_type_t\">sgx_quote_sign_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_quote_sign_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_generic_ecresult_t.html\" title=\"enum sgx_types::sgx_generic_ecresult_t\">sgx_generic_ecresult_t</a>",synthetic:true,types:["sgx_types::types::sgx_generic_ecresult_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_rsa_result_t.html\" title=\"enum sgx_types::sgx_rsa_result_t\">sgx_rsa_result_t</a>",synthetic:true,types:["sgx_types::types::sgx_rsa_result_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_rsa_key_type_t.html\" title=\"enum sgx_types::sgx_rsa_key_type_t\">sgx_rsa_key_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_rsa_key_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_exception_vector_t.html\" title=\"enum sgx_types::sgx_exception_vector_t\">sgx_exception_vector_t</a>",synthetic:true,types:["sgx_types::types::sgx_exception_vector_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_exception_type_t.html\" title=\"enum sgx_types::sgx_exception_type_t\">sgx_exception_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_exception_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_device_status_t.html\" title=\"enum sgx_types::sgx_device_status_t\">sgx_device_status_t</a>",synthetic:true,types:["sgx_types::types::sgx_device_status_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_uswitchless_worker_type_t.html\" title=\"enum sgx_types::sgx_uswitchless_worker_type_t\">sgx_uswitchless_worker_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_uswitchless_worker_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_uswitchless_worker_event_t.html\" title=\"enum sgx_types::sgx_uswitchless_worker_event_t\">sgx_uswitchless_worker_event_t</a>",synthetic:true,types:["sgx_types::types::sgx_uswitchless_worker_event_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_request_policy_t.html\" title=\"enum sgx_types::sgx_ql_request_policy_t\">sgx_ql_request_policy_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_request_policy_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_config_version_t.html\" title=\"enum sgx_types::sgx_ql_config_version_t\">sgx_ql_config_version_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_config_version_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_attestation_algorithm_id_t.html\" title=\"enum sgx_types::sgx_ql_attestation_algorithm_id_t\">sgx_ql_attestation_algorithm_id_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_attestation_algorithm_id_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_cert_key_type_t.html\" title=\"enum sgx_types::sgx_ql_cert_key_type_t\">sgx_ql_cert_key_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_cert_key_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_path_type_t.html\" title=\"enum sgx_types::sgx_ql_path_type_t\">sgx_ql_path_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_ql_path_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.pck_cert_flag_enum_t.html\" title=\"enum sgx_types::pck_cert_flag_enum_t\">pck_cert_flag_enum_t</a>",synthetic:true,types:["sgx_types::types::pck_cert_flag_enum_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_qv_path_type_t.html\" title=\"enum sgx_types::sgx_qv_path_type_t\">sgx_qv_path_type_t</a>",synthetic:true,types:["sgx_types::types::sgx_qv_path_type_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_status_t.html\" title=\"enum sgx_types::sgx_status_t\">sgx_status_t</a>",synthetic:true,types:["sgx_types::error::sgx_status_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_pce_error_t.html\" title=\"enum sgx_types::sgx_pce_error_t\">sgx_pce_error_t</a>",synthetic:true,types:["sgx_types::error::sgx_pce_error_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_quote3_error_t.html\" title=\"enum sgx_types::sgx_quote3_error_t\">sgx_quote3_error_t</a>",synthetic:true,types:["sgx_types::error::sgx_quote3_error_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_qcnl_error_t.html\" title=\"enum sgx_types::sgx_qcnl_error_t\">sgx_qcnl_error_t</a>",synthetic:true,types:["sgx_types::error::sgx_qcnl_error_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/enum.sgx_ql_qv_result_t.html\" title=\"enum sgx_types::sgx_ql_qv_result_t\">sgx_ql_qv_result_t</a>",synthetic:true,types:["sgx_types::error::sgx_ql_qv_result_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.tcs_t.html\" title=\"struct sgx_types::metadata::tcs_t\">tcs_t</a>",synthetic:true,types:["sgx_types::metadata::tcs_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_header_t.html\" title=\"struct sgx_types::metadata::css_header_t\">css_header_t</a>",synthetic:true,types:["sgx_types::metadata::css_header_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_key_t.html\" title=\"struct sgx_types::metadata::css_key_t\">css_key_t</a>",synthetic:true,types:["sgx_types::metadata::css_key_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_body_t.html\" title=\"struct sgx_types::metadata::css_body_t\">css_body_t</a>",synthetic:true,types:["sgx_types::metadata::css_body_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.css_buffer_t.html\" title=\"struct sgx_types::metadata::css_buffer_t\">css_buffer_t</a>",synthetic:true,types:["sgx_types::metadata::css_buffer_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.enclave_css_t.html\" title=\"struct sgx_types::metadata::enclave_css_t\">enclave_css_t</a>",synthetic:true,types:["sgx_types::metadata::enclave_css_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.data_directory_t.html\" title=\"struct sgx_types::metadata::data_directory_t\">data_directory_t</a>",synthetic:true,types:["sgx_types::metadata::data_directory_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.layout_entry_t.html\" title=\"struct sgx_types::metadata::layout_entry_t\">layout_entry_t</a>",synthetic:true,types:["sgx_types::metadata::layout_entry_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.layout_group_t.html\" title=\"struct sgx_types::metadata::layout_group_t\">layout_group_t</a>",synthetic:true,types:["sgx_types::metadata::layout_group_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.patch_entry_t.html\" title=\"struct sgx_types::metadata::patch_entry_t\">patch_entry_t</a>",synthetic:true,types:["sgx_types::metadata::patch_entry_t"]},{text:"impl Freeze for <a class=\"struct\" href=\"sgx_types/metadata/struct.metadata_t.html\" title=\"struct sgx_types::metadata::metadata_t\">metadata_t</a>",synthetic:true,types:["sgx_types::metadata::metadata_t"]},{text:"impl Freeze for <a class=\"union\" href=\"sgx_types/metadata/union.layout_t.html\" title=\"union sgx_types::metadata::layout_t\">layout_t</a>",synthetic:true,types:["sgx_types::metadata::layout_t"]},{text:"impl Freeze for <a class=\"enum\" href=\"sgx_types/metadata/enum.dir_index_t.html\" title=\"enum sgx_types::metadata::dir_index_t\">dir_index_t</a>",synthetic:true,types:["sgx_types::metadata::dir_index_t"]},];
implementors["sgx_unwind"] = [{"text":"impl Freeze for _Unwind_Exception","synthetic":true,"types":[]},{"text":"impl Freeze for _Unwind_Reason_Code","synthetic":true,"types":[]},{"text":"impl Freeze for _Unwind_Context","synthetic":true,"types":[]},{"text":"impl Freeze for _Unwind_Action","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()