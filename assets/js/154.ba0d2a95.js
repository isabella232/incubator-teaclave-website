(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{497:function(e,n,t){"use strict";t.r(n);var s=t(29),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"rpc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rpc"}},[e._v("#")]),e._v(" RPC")]),e._v(" "),t("p",[e._v("This directory contains an RPC implementation over attested TLS connection\nwritten in Rust, providing trusted channels to send and handle requests.\nRPC interfaces and request/response messages can be defined in ProtoBuf and\nused for generating Rust structs and traits to implement services or client\nfunction to send requests.")]),e._v(" "),t("p",[e._v("Similar with other RPC frameworks, there are several concepts of RPC in\nTeaclave.")]),e._v(" "),t("h2",{attrs:{id:"channel-and-client"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#channel-and-client"}},[e._v("#")]),e._v(" Channel and Client")]),e._v(" "),t("p",[e._v("A channel in RPC represent a connection to the target service. Clients can use\nthe channel to send requests. In Teaclave, we implement "),t("code",[e._v("SgxTrustedTlsChannel")]),e._v(",\nwhich can establish and attested a remote connection. For example, to connect\nthe management service, you need to establish a trusted channel with the service\nfirst. Then, create a client of management service with the channel. At last,\nyou can use this client to send requests like "),t("code",[e._v("InvokeTask")]),e._v(".")]),e._v(" "),t("p",[e._v("When constructing a client, you can use the "),t("code",[e._v("SgxTrustedTlsClientConfig")]),e._v(" to setup\nTLS and attestation configs.")]),e._v(" "),t("h2",{attrs:{id:"server-and-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-and-service"}},[e._v("#")]),e._v(" Server and Service")]),e._v(" "),t("p",[e._v("Server is an entity to listening a network address, processing incoming\nmessages, and forwarding requests to certain service. Similar with channel in\nTeaclave, we implement "),t("code",[e._v("SgxTrustedTlsServer")]),e._v(", which can establish an attested TLS\nchannel with clients.")]),e._v(" "),t("p",[e._v("Similar with the client, you can use "),t("code",[e._v("SgxTrustedTlsServerConfig")]),e._v(" to setup TLS\nand attestation configs.")]),e._v(" "),t("h2",{attrs:{id:"protocol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#protocol"}},[e._v("#")]),e._v(" Protocol")]),e._v(" "),t("p",[e._v("There are many RPC protocols that can be implemented in the RPC framework. Currently,\nthere's only one simple protocol called "),t("code",[e._v("JsonProtocol")]),e._v(". Simply speaking, for\nthe json protocol, one RPC message will contain a length of the following\nrequests (in big endian) and a json serialized request.")])])}),[],!1,null,null,null);n.default=a.exports}}]);