initSidebarItems({"enum":[["AlgorithmId","Algorithms that can be allocated as an crypto operation."],["ElementId","This specification defines support for optional cryptographic elements."],["OperationConstant","Define the supported crypto operation."],["OperationMode","Specify one of the available cryptographic operations."],["OperationStates","Every operation of AE, Asymmetric, Cipher, DeriveKey, Digest, Mac can be either one of the two states."]],"fn":[["is_algorithm_supported","determine whether a combination of algId and element is supported"]],"struct":[["AE","An operation for conducting authenticated encryption / decryption."],["Asymmetric","An operation for conducting asymmetric encryption /decryption or asymmetric sign / verify. Note that asymmetric encryption is always “single-stage”, which differs from Cipher which are always “multi-stage”."],["Cipher","An operation for conducting symmetric cipher encryption / decryption. This operation defines the way to perform symmetric cipher operations, such as AES. They cover both block ciphers and stream ciphers."],["DeriveKey","An operation for derive a shared key object."],["Digest","An operation for digest the message."],["Mac","An operation for performing MAC (Message Authentication Code) operations, such as `HMAC` or `AES-CMAC` operations. This operation is not used for Authenticated Encryption algorithms, which SHALL use the functions defined in AE."],["OperationHandle","An opaque reference that identifies a particular cryptographic operation."],["OperationInfo","Represent the information about a crypto information."],["OperationInfoMultiple","Represent the information about a crypto information which uses multiple keys."],["Random","An operation for generating random data."]],"trait":[["OpHandle","A trait for a crypto operation to return its handle."]]});