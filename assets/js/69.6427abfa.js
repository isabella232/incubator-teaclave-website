(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{564:function(e,t,a){"use strict";a.r(t);var r=a(29),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"mutual-remote-attestation-code-sample"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutual-remote-attestation-code-sample"}},[e._v("#")]),e._v(" Mutual Remote Attestation code sample")]),e._v(" "),a("p",[e._v("This code sample contains an implementation of "),a("a",{attrs:{href:"https://github.com/cloud-security-research/sgx-ra-tls/blob/master/whitepaper.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Integrating Remote Attestation with Transport Layer Security")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("p",[e._v("To use this code sample, one needs to register at "),a("a",{attrs:{href:"https://api.portal.trustedservices.intel.com/EPID-attestation",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel website")]),e._v(" for dev IAS service access. Once the registration is finished, the following stuff should be ready:")]),e._v(" "),a("ol",[a("li",[e._v("An SPID assigned by Intel")]),e._v(" "),a("li",[e._v("IAS API Key assigned by Intel")])]),e._v(" "),a("p",[e._v("Both of these information could be found in the new "),a("a",{attrs:{href:"https://api.portal.trustedservices.intel.com/developer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel Trusted Services API Management Portal")]),e._v('. Please log into this portal and switch to "Manage subscriptions" page on the top right corner to see your SPID and API keys. Either primary key or secondary key works.')]),e._v(" "),a("p",[e._v("Save them to "),a("code",[e._v("bin/spid.txt")]),e._v(" and "),a("code",[e._v("bin/key.txt")]),e._v(" respectively. Size of these two files should be 32 or 33.")]),e._v(" "),a("h2",{attrs:{id:"run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[e._v("#")]),e._v(" Run")]),e._v(" "),a("p",[e._v("Start server")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("make\ncd bin\n./app --server (add --unlink if your spid's type is unlinkable)\n")])])]),a("p",[e._v("Start client")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("make\ncd bin\n./app --client (add --unlink if your spid's type is unlinkable)\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);