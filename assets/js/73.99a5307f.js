(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{558:function(e,t,r){"use strict";r.r(t);var a=r(29),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"private-set-intersection-sample-solution"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#private-set-intersection-sample-solution"}},[e._v("#")]),e._v(" Private Set Intersection sample solution")]),e._v(" "),r("p",[e._v("This example is a concrete solution of private-set-intersection problem. It leverages Intel SGX to achieve confidenaility, 100% accuracy, and the best performance. This code sample is derived from "),r("a",{attrs:{href:"https://github.com/svartkanin/linux-sgx-remoteattestation",target:"_blank",rel:"noopener noreferrer"}},[e._v("linux-sgx-remoteattestation")]),e._v(", and only the enclave is written in Rust.")]),e._v(" "),r("p",[e._v("For convenience, we simply add "),r("code",[e._v("SGX_MODE=HW SGX_PRERELEASE=1")]),e._v(" to the Makefile and please run "),r("code",[e._v("make")]),e._v(" in both "),r("code",[e._v("SMCClient")]),e._v(" and "),r("code",[e._v("SMCServer")]),e._v(" to build respectively.")]),e._v(" "),r("p",[e._v("The code consists of two separate programs, the SMCClient and the SMCServer. The message exchange over the network is performed using Google Protocol Buffers.")]),e._v(" "),r("h2",{attrs:{id:"setup"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#setup"}},[e._v("#")]),e._v(" Setup")]),e._v(" "),r("p",[e._v("Before running the code, some settings have to be set in the "),r("code",[e._v("GeneralSettings.h")]),e._v(" file:")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("The application port and IP")])]),e._v(" "),r("li",[r("p",[e._v("A server certificate and private key are required for the SSL communication between the SP and the Application (which can be self-signed) e.g. "),r("code",[e._v("openssl req -x509 -nodes -newkey rsa:4096 -keyout server.key -out server.crt -days 365")])])]),e._v(" "),r("li",[r("p",[e._v("The SPID provided by Intel when registering for the developer account")])]),e._v(" "),r("li",[r("p",[e._v("The certificate sent to Intel when registering for the developer account")])]),e._v(" "),r("li",[r("p",[e._v("IAS Rest API url (should stay the same)")])])]),e._v(" "),r("p",[e._v("To be able to run the above code some external libraries are needed:")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Google Protocol Buffers (should already be installed with the SGX SDK package) otherwise install "),r("code",[e._v("libprotobuf-dev")]),e._v(", "),r("code",[e._v("libprotobuf-c0-dev")]),e._v(" and "),r("code",[e._v("protobuf-compiler")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("libboost-thread-dev")]),e._v(", "),r("code",[e._v("libboost-system-dev")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("curl")]),e._v(", "),r("code",[e._v("libcurl4-openssl-dev")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("libssl")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("liblog4cpp5-dev")])])])]),e._v(" "),r("p",[e._v("After the installation of those dependencies, the code can be compiled with the following commands:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("cd SMCClient\nmake\ncd ../SMCServer\nmake SGX_MODE=HW SGX_PRERELEASE=1\n")])])]),r("h2",{attrs:{id:"run"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[e._v("#")]),e._v(" Run")]),e._v(" "),r("p",[e._v("Run SMCServer:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("cd SMCServer\n./app\n")])])]),r("p",[e._v("Run two SMCClient:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("cd SMCClient\n./app hash1.txt\n./app hash2.txt\n")])])]),r("h1",{attrs:{id:"linux-sgx-remote-attestation-original-readme"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#linux-sgx-remote-attestation-original-readme"}},[e._v("#")]),e._v(" Linux SGX remote attestation (Original Readme)")]),e._v(" "),r("p",[e._v("Example of a remote attestation with Intel's SGX including the communication with IAS.")]),e._v(" "),r("p",[e._v("The code requires the installation of Intel SGX "),r("a",{attrs:{href:"https://github.com/01org/linux-sgx",target:"_blank",rel:"noopener noreferrer"}},[e._v("here")]),e._v(" and\nthe SGX driver "),r("a",{attrs:{href:"https://github.com/01org/linux-sgx-driver",target:"_blank",rel:"noopener noreferrer"}},[e._v("here")]),e._v(". Furthermore, also a developer account\nfor the usage of IAS has be registered "),r("a",{attrs:{href:"https://software.intel.com/en-us/sgx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Deverloper account")]),e._v(".\nAfter the registration with a certificate (can be self-signed for development purposes), Intel will\nrespond with a SPID which is needed to communicate with IAS.")]),e._v(" "),r("p",[r("strong",[e._v("In addition, please manually install "),r("code",[e._v("libjsoncpp-dev")]),e._v(" for dependency.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);