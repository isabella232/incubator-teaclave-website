(function() {var implementors = {};
implementors["sgx_tstd"] = [{"text":"impl&lt;T&gt; Sync for LocalKey&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AccessError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for Key&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Builder","synthetic":true,"types":[]},{"text":"impl Sync for ThreadId","synthetic":true,"types":[]},{"text":"impl Sync for SgxThread","synthetic":true,"types":[]},{"text":"impl&lt;K, V, S&gt; Sync for HashMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, S&gt; Sync for HashSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Iter&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for IterMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoIter&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Keys&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Values&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Drain&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, F&gt; Sync for DrainFilter&lt;'a, K, V, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for ValuesMut&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoKeys&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Sync for IntoValues&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawEntryBuilderMut&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawOccupiedEntryMut&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawVacantEntryMut&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawEntryBuilder&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for OccupiedEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for VacantEntry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RandomState","synthetic":true,"types":[]},{"text":"impl Sync for DefaultHasher","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V, S&gt; Sync for RawEntryMut&lt;'a, K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, V&gt; Sync for Entry&lt;'a, K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Sync for Iter&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K&gt; Sync for IntoIter&lt;K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K&gt; Sync for Drain&lt;'a, K&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, K, F&gt; Sync for DrainFilter&lt;'a, K, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Intersection&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Difference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for SymmetricDifference&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, S&gt; Sync for Union&lt;'a, T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Sync for Vars","synthetic":true,"types":[]},{"text":"impl !Sync for VarsOs","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SplitPaths&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for JoinPathsError","synthetic":true,"types":[]},{"text":"impl Sync for VarError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for Chain&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for ErrorIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for OsString","synthetic":true,"types":[]},{"text":"impl Sync for OsStr","synthetic":true,"types":[]},{"text":"impl !Sync for SgxFile","synthetic":true,"types":[]},{"text":"impl Sync for OpenOptions","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for IntoInnerError&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for BufReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for BufWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; Sync for LineWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Cursor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Error","synthetic":true,"types":[]},{"text":"impl Sync for Stderr","synthetic":true,"types":[]},{"text":"impl Sync for Stdin","synthetic":true,"types":[]},{"text":"impl Sync for Stdout","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StderrLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StdinLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StdoutLock&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Empty","synthetic":true,"types":[]},{"text":"impl Sync for Repeat","synthetic":true,"types":[]},{"text":"impl Sync for Sink","synthetic":true,"types":[]},{"text":"impl Sync for Initializer","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Sync for Chain&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Take&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Sync for Bytes&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Split&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; Sync for Lines&lt;B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for ErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for SeekFrom","synthetic":true,"types":[]},{"text":"impl Sync for Ipv4Addr","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6Addr","synthetic":true,"types":[]},{"text":"impl Sync for SocketAddrV4","synthetic":true,"types":[]},{"text":"impl Sync for SocketAddrV6","synthetic":true,"types":[]},{"text":"impl Sync for TcpStream","synthetic":true,"types":[]},{"text":"impl Sync for TcpListener","synthetic":true,"types":[]},{"text":"impl Sync for UdpSocket","synthetic":true,"types":[]},{"text":"impl Sync for AddrParseError","synthetic":true,"types":[]},{"text":"impl Sync for IpAddr","synthetic":true,"types":[]},{"text":"impl Sync for Ipv6MulticastScope","synthetic":true,"types":[]},{"text":"impl Sync for SocketAddr","synthetic":true,"types":[]},{"text":"impl Sync for Shutdown","synthetic":true,"types":[]},{"text":"impl Sync for SocketAddr","synthetic":true,"types":[]},{"text":"impl Sync for UnixStream","synthetic":true,"types":[]},{"text":"impl Sync for UnixListener","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Incoming&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for UnixDatagram","synthetic":true,"types":[]},{"text":"impl Sync for stat","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for AssertUnwindSafe&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PrefixComponent&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Components&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Ancestors&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PathBuf","synthetic":true,"types":[]},{"text":"impl Sync for Path","synthetic":true,"types":[]},{"text":"impl Sync for StripPrefixError","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Display&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Prefix&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Component&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for Barrier","synthetic":true,"types":[]},{"text":"impl Sync for BarrierWaitResult","synthetic":true,"types":[]},{"text":"impl Sync for SgxCondvar","synthetic":true,"types":[]},{"text":"impl Sync for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Sync for SgxReentrantMutexGuard&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for OnceState","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SgxSpinlockGuard&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for PoisonError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TryLockError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Sync for TryIter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Sync for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SyncSender&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for SendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for RecvError","synthetic":true,"types":[]},{"text":"impl Sync for TryRecvError","synthetic":true,"types":[]},{"text":"impl Sync for RecvTimeoutError","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for TrySendError&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Instant","synthetic":true,"types":[]},{"text":"impl Sync for SystemTime","synthetic":true,"types":[]},{"text":"impl Sync for SystemTimeError","synthetic":true,"types":[]},{"text":"impl Sync for File","synthetic":true,"types":[]},{"text":"impl Sync for Metadata","synthetic":true,"types":[]},{"text":"impl Sync for ReadDir","synthetic":true,"types":[]},{"text":"impl Sync for DirEntry","synthetic":true,"types":[]},{"text":"impl Sync for OpenOptions","synthetic":true,"types":[]},{"text":"impl Sync for Permissions","synthetic":true,"types":[]},{"text":"impl Sync for FileType","synthetic":true,"types":[]},{"text":"impl Sync for DirBuilder","synthetic":true,"types":[]},{"text":"impl Sync for PrintFormat","synthetic":true,"types":[]},{"text":"impl Sync for Backtrace","synthetic":true,"types":[]},{"text":"impl Sync for BacktraceStatus","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Key&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for Key&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for JoinHandle&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Sync for Lazy&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Sync for IoSliceMut&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Sync for IoSlice&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; !Sync for Receiver&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; !Sync for Sender&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for SgxThreadCondvar","synthetic":false,"types":[]},{"text":"impl Sync for SgxThreadMutex","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send&gt; Sync for SgxMutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, '_&gt; Sync for SgxMutexGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for SgxReentrantThreadMutex","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Send&gt; Sync for SgxReentrantMutex&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for Once","synthetic":false,"types":[]},{"text":"impl Sync for SgxThreadRwLock","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Send + Sync&gt; Sync for SgxRwLock&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, '_&gt; Sync for SgxRwLockReadGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized + Sync, '_&gt; Sync for SgxRwLockWriteGuard&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl Sync for SgxThreadSpinlock","synthetic":false,"types":[]},{"text":"impl Sync for SgxSpinlock","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()