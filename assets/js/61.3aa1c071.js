(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{581:function(e,t,a){"use strict";a.r(t);var r=a(29),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"the-world-of-forked-crates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-world-of-forked-crates"}},[e._v("#")]),e._v(" The World of Forked crates")]),e._v(" "),a("p",[e._v('We created a "super repo" at '),a("a",{attrs:{href:"https://github.com/dingelish/sgx-world",target:"_blank",rel:"noopener noreferrer"}},[e._v("dingelish/sgx-world")]),e._v(", which includes all the forked repos as git submodules.")]),e._v(" "),a("p",[e._v('We created a "dumb crate" '),a("a",{attrs:{href:"https://github.com/dingelish/sgx-world/tree/master/dumb-all",target:"_blank",rel:"noopener noreferrer"}},[e._v("dumb-all")]),e._v(" to help us maintain the world of forked crates. Each dependency of dumb-all is a valid crate in Rust-SGX ecosystem. The enabled feature set is likely to be the universe of supported feature set. Exceptions exist in a couple of crates, where there are conflict features.")]),e._v(" "),a("p",[e._v("Generally speaking, to use a forked crate, simply use the following statement:")]),e._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('wasmi = { git = "https://github.com/mesalock-linux/wasmi-sgx" }\n')])])]),a("p",[e._v("No need to config the branch in most cases. Only a few of the forked crates use specific branches.")]),e._v(" "),a("h2",{attrs:{id:"tagging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tagging"}},[e._v("#")]),e._v(" Tagging")]),e._v(" "),a("p",[e._v("As of today, Oct 23 2019, cargo still has problem on git dependencies. The issue is "),a("a",{attrs:{href:"https://github.com/rust-lang/cargo/issues/7497",target:"_blank",rel:"noopener noreferrer"}},[e._v("cargo #7497")]),e._v(". It leads to a dependency hell if the Cargo.toml looks like:")]),e._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('foo = { git = "https://github.com/..." }\nfoo = { git = "https://github.com/...", rev = "deadbeaf" }\nfoo = { git = "https://github.com/...", tag = "deadbeaf" }\n')])])]),a("p",[e._v("These three foos are all valid, but different from each other in compilation. Assume that crate "),a("code",[e._v("bar")]),e._v(" depends on foo with the first one, and "),a("code",[e._v("haa")]),e._v(" depends on foo with the second one, then the dependency tree is going to mess up. So this is the reason that almost all forked crates are tagged with "),a("code",[e._v("sgx_1.0.9")]),e._v(" but the cross references are not using that tag.")]),e._v(" "),a("p",[e._v("One potential fix is a tool to fix Cargo.lock and remove the redundant crates. I've done this successfully by manually dedup Cargo.lock according to the hash value instead of URI. Maybe we can automate this later\"")]),e._v(" "),a("h2",{attrs:{id:"the-world-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-world-map"}},[e._v("#")]),e._v(" The World Map")]),e._v(" "),a("p",[e._v("Generated by "),a("code",[e._v("cargo deps")]),e._v(" on dumb-all.")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://github.com/dingelish/sgx-world/raw/master/dumb-all/world.png",alt:"world map"}})]),e._v(" "),a("h2",{attrs:{id:"security-audit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security-audit"}},[e._v("#")]),e._v(" Security audit")]),e._v(" "),a("p",[e._v("We use "),a("a",{attrs:{href:"https://github.com/RustSec/cargo-audit",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("cargo-audit")])]),e._v(" to automatically check for known vulnerabilities. And the pipeline has been added to CI which runs nightly. We'll update immediately once we find a security issue by "),a("code",[e._v("cargo-audit")]),e._v(". Thanks to @tarcieri for this fantastic tool!")])])}),[],!1,null,null,null);t.default=s.exports}}]);